.profitHurdle           internal implementation of profit hurdle code,
                        see 'profit.hurdle'
add.distribution        Adds a distribution to a paramset in a strategy
add.distribution.constraint
                        Adds a constraint on 2 distributions within a
                        paramset
add.indicator           add an indicator to a strategy
add.init                add arbitrary initialization functions to a
                        strategy
add.rule                add a rule to a strategy
add.signal              add a signal to a strategy
addOrder                add an order to the order book
addPosLimit             add position and level limits at timestamp
apply.paramset          Apply a paramset to the strategy
apply.paramset.signal.analysis
                        Signal Analysis With Parmeter Optimization
applyIndicatorSignals   Calculate Indicators and Signals for a Strategy
applyIndicators         apply the indicators in the strategy to
                        arbitrary market data
applyParameter          Generate parameter sets for a specific
                        strategy, test the strategy on each set of
                        parameters, output result package. (deprecated)
applyRules              apply the rules in the strategy to arbitrary
                        market data
applySignals            apply the signals in the strategy to arbitrary
                        market data
applyStrategy           apply the strategy to arbitrary market data
applyStrategy.rebalancing
                        apply the strategy to arbitrary market data,
                        with periodic rebalancing
beanplot.signals        Visualization of Signal Across Lookback with
                        Beanplots
chart.forward           Chart to analyse walk.forward() objective
                        function
chart.forward.training
                        Chart to analyse walk.forward() objective
                        function
clone.orderbook         clone a orderbook object, potentially stripping
                        all history
clone.portfolio         clone a portfolio object, potentially stripping
                        all history
deflatedSharpe          Calculate a Deflated Sharpe Ratio using number
                        of trials and portfolio moments
degrees.of.freedom      calculate degrees of freedom used by a strategy
                        and available from test data
delete.paramset         Delete a paramset from a strategy
distributional.boxplot
                        Visualization of Single Signal
enable.rule             enable a rule in the strategy
get.orderbook           get the order book object
get.strategy            retrieve strategy from the container
                        environment
getOrders               get orders by time span, status, type, and side
getParameterTable       Extract the parameter structure from a strategy
                        object. (deprecated)
getPosLimit             get position and level limits on timestamp
haircutSharpe           Haircut Sharpe Ratio to correct for number of
                        trials and autocorrelation
initOrders              initialize order container
initStrategy            run standard and custom strategy initialization
                        functions
initSymbol              Run standard and custom symbol initialization
                        functions
install.param.combo     insert a specific parameter combo into a
                        strategy object
is.strategy             test to see if object is of type 'strategy'
load.strategy           load a strategy object from disk into memory
luxoraudit              sample audit environment output from running
                        luxor demo in file data/luxor.wfa.ples.RData
match.names             match names in data to a list of partial name
                        matches
osMaxPos                order sizing function for position limits and
                        level sizing
osNoOp                  default order sizing function
paramConstraint         Internal function used in applyParameter
                        function for process constraints on
                        relationship between two parameter values.
                        (deprecated)
portfolio.luxor         sample portfolio output from running luxor demo
                        in file data/luxor-p066.RData
post.signal.returns     Generate Post Signal Returns
print.dof               print method for strategy degrees of freedom
                        object
print.haircutSR         print method for Harvey and Liu Haircut Sharpe
                        Ratio
print.profitHurdle      print method for Harvey and Liu Haircut Sharpe
                        Ratio
profitHurdle            Profit Hurdle function - A Minimum
                        Profitability Method for Proposed Trading
                        Strategies
put.orderbook           put an orderbook object in .strategy env
put.strategy            put a strategy object in .strategy env
quantstrat-package      Quantitative Strategy Model Framework
rm.strat                Remove objects associated with a strategy
ruleOrderProc           process open orders at time _t_, generating
                        transactions or new orders
rulePctEquity           rule to base trade size on a percentage of
                        available equity.
ruleRevoke              rule to revoke(cancel) an unfilled limit order
                        on a signal
ruleSignal              default rule to generate a trade order on a
                        signal
sample_random_multests
                        Generate empirical p-value distributions
save.strategy           save a strategy object from memory onto disk
setParameterConstraint
                        Function to construct parameter constraint
                        object. (deprecated)
setParameterDistribution
                        Function used to create an object that contains
                        the distribution of parameters to be generated
                        from, before testing parameters of a strategy.
                        (deprecated)
sigComparison           generate comparison signal
sigCrossover            generate a crossover signal
sigFormula              generate a signal from a formula
sigPeak                 signal function for peak/valley signals
sigThreshold            generate a threshold signal
sigTimestamp            generate a signal on a timestamp
signal.generate.statistics
                        Signal Objective Function Calculation
signal.obj.slope        Signal Objective Function
signal.path.plot        Visualization of Signal Path
signal.plot             Visualization of Signal Across Lookback
spx                     sample spx daily OHLCVA data set 1970:1971
stats                   sample tradeStats output from running luxor
                        demo in file
                        data/luxor.parameters.1-10.30-55.RData
stratBBands             Bollinger Bands Strategy
stratFaber              Faber market timing strategy
strategy                constructor for objects of type 'strategy'
tradeGraphs             Draw 3D graphs from tradeStats results using
                        rgl
tradeOrderStats         get order information associated with closing
                        positions
updateOrders            update an order or orders
updateStrategy          run standard and custom strategy wrapup
                        functions such as updating portfolio, account,
                        and ending equity
walk.forward            Rolling Walk Forward Analysis
