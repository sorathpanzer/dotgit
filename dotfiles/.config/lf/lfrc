# Basic Settings

set preview true
set previewer ~/.config/lf/preview
set previewer pistol
set hidden true
set color256 true
set drawbox true
set icons true
set ignorecase true

# Custom Functions

cmd bulkrename ${{
    vidir
}}

cmd open ${{
    case $(file --mime-type "$f" -bL) in
        text/*|application/json) $EDITOR "$f";;
        video/*|image/*/application/pdf) xdg-open "$f" & disown;;
        *) xdg-open "$f" ;;
    esac
}}

cmd mkdir ${{
  printf "Directory Name: "
  read ans
  mkdir $ans
}}

cmd mkfile ${{
  printf "File Name: "
  read ans
  $EDITOR $ans
}}

cmd chmod ${{
  for file in "$fx"
  do
    chmod +x $file
  done
}}

cmd sudomkfile ${{
  printf "File Name: "
  read ans
  sudo $EDITOR $ans
}}

cmd setwallpaper %cp "$f" ~/.config/wall.png && nitrogen --set-scaled "$f"

cmd fzf_jump ${{
  res="$(find -L $HOME -maxdepth 4 -type d ! -path "$HOME*/.local/*" ! -path "$HOME*/.cache/*" ! -path "$HOME*/Brave*" \
! -path "$HOME*/.config/R/*" ! -path "$HOME*/.*dotfiles/*" ! -path "$HOME*/Projectos/r-backtester/.Rproj.user/*" \
! -path "$HOME*/.config/coc/*" ! -path "$HOME*/.*/nvim/autoload/*" ! -path "$HOME/.npm/*" | fzf --reverse --header='Jump to location')"
#  res="$(find . -maxdepth 3 | fzf --reverse --header='Jump to location')"
  if [ -f "$res" ]; then
    cmd="select"
  elif [ -d "$res" ]; then
    cmd="cd"
  fi
  lf -remote "send $id $cmd \"$res\""
}}

cmd open_config  ${{
  $EDITOR $(bookmenu -b ~/.config/bookmenu/configs -f fzf -o)
}}

cmd mtsda ${{
  clear
  sudo udisksctl unlock -b /dev/sda1
  sudo udisksctl mount -b /dev/dm-0
}}

# Archive bindings
cmd unarchive ${{
  case "$f" in
      *.zip) unzip "$f" ;;
      *.tar.gz) tar -xzvf "$f" ;;
      *.tar.bz2) tar -xjvf "$f" ;;
      *.tar) tar -xvf "$f" ;;
      *.tar.xz) tar -xvf "$f" ;;
      *) echo "Unsupported format" ;;
  esac
}}

cmd burniso ${{
  sudo dd if="$f" of=/dev/sdb
}}

cmd zip %zip -r "$f" "$f"
cmd tar %tar cvf "$f.tar" "$f"
cmd targz %tar cvzf "$f.tar.gz" "$f"
cmd tarbz2 %tar cjvf "$f.tar.bz2" "$f"
cmd tarxz %tar cfjv "$f.tar.xz" "$f"

# Trash cli bindings
cmd trash ${{
  files=$(printf "$fx" | tr '\n' ';')
  while [ "$files" ]; do
    # extract the substring from start of string up to delimiter.
    # this is the first "element" of the string.
    file=${files%%;*}

    trash-put "$(basename "$file")"
    # if there's only one element left, set `files` to an empty string.
    # this causes us to exit this `while` loop.
    # else, we delete the first "element" of the string from files, and move onto the next.
    if [ "$files" = "$file" ]; then
      files=''
    else
      files="${files#*;}"
    fi
  done
}}

cmd clear_trash %trash-empty

cmd restore_trash ${{
  trash-restore
}}

cmd cptofold ${{
    set -f
    printf "Directory Name: "
    read newd
    mkdir $newd
    cp $fx $newd
}}

cmd mvtofold ${{
    set -f
    printf "Directory Name: "
    read newd
    mkdir $newd
    mv $fx $newd
}}

cmd yank-path ${{
    if [ -n "$fs" ]; then echo "$fs"; else echo "$f" | tr -d '\n'; fi |
      xclip -i -selection clipboard
}}

cmd yank-basename ${{
    if [ -n "$fs" ]; then
      echo "$fs" | xargs -r -d '\n' basename -a --
    else
      basename -- "$f" | tr -d '\n'
    fi | xclip -i -selection clipboard
}}


cmd q quit

# Bindings
# Remove some defaults
map m
map o
map n
map "'"
map '"'
map d
map c
map e
map f

cmd video_preview ${{
    CACHE=$(mktemp /tmp/thumb_cache.XXXXX)
    ffmpegthumbnailer -i "$f" -o $CACHE -s 0
    ~/.config/lf/draw_img.sh $CACHE && rm $CACHE
}}

map + :video_preview
map - ~/.config/lf/draw_img.sh "$f"

# File Openers
map ee $$EDITOR "$f"
#map u $view "$f"

# Archive Mappings
map az zip
map at tar
map ag targz
map ab tarbz2
map ax tarxz
map au unarchive

# Trash Mappings
map dd trash
map tc clear_trash
map tr restore_trash

# Awesome Search
map s fzf_jump
map f fzf_jump

# Basic Functions
map . set hidden!
map DD delete
map p paste
map x cut
map y copy
map Yf yank-basename
map Yp yank-path
map <enter> open
map mf mkfile
map mr sudomkfile
map md mkdir
map ms $mkscript
map ch chmod
map bg setwallpaper
map o open_config
map br bulkrename
map r rename
map H top
map L bottom
map R reload
map C clear
map <esc> unselect
map bi burniso
map cd cptofold
map sd mvtofold

# Movement
map gtr cd ~/.local/share/Trash/files
map gm cd /media
map mt mtsda

map gv cd ~/Videos
map gi cd ~/Imagens
map gw cd ~/Imagens/Wallpapers
map gd cd ~/Documentos
map gt cd ~/TransferÃªncias

map gc cd ~/.config
map gs cd ~/.config/suckless
map ge cd /etc
map gu cd /usr
map gus cd /usr/share
