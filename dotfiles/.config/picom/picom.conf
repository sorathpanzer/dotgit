#            ▀                                                       ▄▀▀
#   ▄▄▄▄   ▄▄▄     ▄▄▄    ▄▄▄   ▄▄▄▄▄          ▄▄▄    ▄▄▄   ▄ ▄▄   ▄▄█▄▄
#   █▀ ▀█    █    █▀  ▀  █▀ ▀█  █ █ █         █▀  ▀  █▀ ▀█  █▀  █    █
#   █   █    █    █      █   █  █ █ █         █      █   █  █   █    █
#   ██▄█▀  ▄▄█▄▄  ▀█▄▄▀  ▀█▄█▀  █ █ █    █    ▀█▄▄▀  ▀█▄█▀  █   █    █
#   █
#   ▀

experimental-backends = true;
mark-wmwin-focused = true;
mark-ovredir-focused = true;
detect-rounded-corners = true;
detect-client-opacity = true;
refresh-rate = 0
detect-transient = true
detect-client-leader = true
use-damage = false
log-level = "info";


#################################
#
# Backend
#
#################################

# Backend to use: "xrender" or "glx".
# GLX backend is typically much faster but depends on a sane driver.
backend = "glx";
glx-no-stencil = true;

#################################
#
# Shadows
#
#################################

# Enabled client-side shadows on windows.
shadow = true;
# The blur radius for shadows. (default 12)
shadow-radius = 12;
# The left offset for shadows. (default -15)
#shadow-offset-x = -5;
# The top offset for shadows. (default -15)
#shadow-offset-y = -5;
# The translucency for shadows. (default .75)
#shadow-opacity = 0.5;

# Set if you want different colour shadows
# shadow-red = 0.0;
# shadow-green = 0.0;
# shadow-blue = 0.0;

# The shadow exclude options are helpful if you have shadows enabled. Due to the way picom draws its shadows, certain applications will have visual glitches
# (most applications are fine, only apps that do weird things with xshapes or argb are affected).
# This list includes all the affected apps I found in my testing. The "! name~=''" part excludes shadows on any "Unknown" windows, this prevents a visual glitch with the XFWM alt tab switcher.
#shadow-exclude = [
#    "! name~=''",
#    "name = 'Notification'",
#    "name = 'Plank'",
#    "name = 'Docky'",
#    "name = 'Kupfer'",
#    "name = 'xfce4-notifyd'",
#    "name = 'cpt_frame_window'",
#    "name *= 'VLC'",
#    "name *= 'compton'",
#    "name *= 'picom'",
#    "name *= 'Chromium'",
#    "name *= 'Chrome'",
#    "class_g = 'Firefox' && argb",
#    "class_g = 'Conky'",
#    "class_g = 'Kupfer'",
#    "class_g = 'Synapse'",
#    "class_g ?= 'Notify-osd'",
#    "class_g ?= 'Cairo-dock'",
#    "class_g ?= 'Xfce4-notifyd'",
#    "class_g ?= 'Xfce4-power-manager'",
#    "_GTK_FRAME_EXTENTS@:c",
#    "_NET_WM_STATE@:32a *= '_NET_WM_STATE_HIDDEN'"
#];
# Avoid drawing shadow on all shaped windows (see also: --detect-rounded-corners)
#shadow-ignore-shaped = false;

#################################
#
# Opacity
#
#################################

inactive-opacity = 1;
frame-opacity = 1;
focus-exclude = [
	"class_g ?= 'dmenu'",
	"class_g ?= 'sxiv'"
];

# Dim inactive windows. (0.0 - 1.0)
# inactive-dim = 0.2;
# Do not let dimness adjust based on window opacity.
# inactive-dim-fixed = true;
# Blur background of transparent windows. Bad performance with X Render backend. GLX backend is preferred.
# blur-background = true;
# Blur background of opaque windows with transparent frames as well.
# blur-background-frame = true;
# Do not let blur radius adjust based on window opacity.

#################################
#
# Fading
#
#################################

# Fade windows during opacity changes.
fading = true;
# The time between steps in a fade in milliseconds. (default 10).
fade-delta = 4;
# Opacity change between steps while fading in. (default 0.028).
fade-in-step = 0.03;
# Opacity change between steps while fading out. (default 0.03).
fade-out-step = 0.03;
# Fade windows in/out when opening/closing
# no-fading-openclose = true;

# Specify a list of conditions of windows that should not be faded.
#fade-exclude = [
#	"class_g ?= 'scrot'"
#];

#################################
#
# Other
#
#################################

# Detect rounded corners and treat them as rectangular when --shadow-ignore-shaped is on.
#detect-rounded-corners = true;

# This prevents opacity being ignored for some apps.
# For example without this enabled my xfce4-notifyd is 100% opacity no matter what.
#detect-client-opacity = true;

# Specify refresh rate of the screen.
# If not specified or 0, picom will try detecting this with X RandR extension.
#refresh-rate = 0;

# Vertical synchronization: match the refresh rate of the monitor
vsync = true;
dbe = true;

opacity-rule = [
  "100:class_g = 'emacs'"
];

