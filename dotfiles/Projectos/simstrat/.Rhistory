#getSymbols(SYMBOL, from = start_date)
getSymbols(SYMBOL, src = "yahoo", from = start_date)
getSymbols("SPY", from = start_date)
na.omit(SYMBOL)
na.omit(STOCK)
CPR <- STOCK/SPY
candleChart(STOCK, up.col = "green", dn.col = "red", theme = "black")
candleChart(CPR, up.col = "green", dn.col = "red", theme = "black")
library(quantmod)
library(ggplot2)
library(magrittr)
start_date <- as.Date("2020-01-03")
dataEnv<-new.env()
STOCK <- `XRX`
SYMBOL <- c("XRX")
length(SYMBOL)
getSymbols(SYMBOL, from = start_date)
getSymbols(SYMBOL, src = "yahoo", from = start_date)
getSymbols("SPY", from = start_date)
na.omit(SYMBOL)
na.omit(STOCK)
CPR <- STOCK/SPY
candleChart(STOCK, up.col = "green", dn.col = "red", theme = "black")
candleChart(CPR, up.col = "green", dn.col = "red", theme = "black")
library(quantmod)
library(ggplot2)
library(magrittr)
start_date <- as.Date("2020-01-03")
dataEnv<-new.env()
STOCK <- `XRX`
#SYMBOL <- c("XRX")
#length(SYMBOL)
getSymbols(SYMBOL, from = start_date)
#getSymbols(SYMBOL, src = "yahoo", from = start_date)
#getSymbols("SPY", from = start_date)
#na.omit(SYMBOL)
na.omit(STOCK)
#CPR <- STOCK/SPY
candleChart(STOCK, up.col = "green", dn.col = "red", theme = "black")
#candleChart(CPR, up.col = "green", dn.col = "red", theme = "black")
library(quantmod)
library(ggplot2)
library(magrittr)
getSymbols("SPY", from=from, to=to, adjust=TRUE)
rm.strat("buyHold")
#Initial Setup
initPortf("buyHold", "SPY", initDate = initDate)
initAcct("buyHold", portfolios = "buyHold",
initDate = initDate, initEq = initEq)
FirstDate <- first(time(SPY))
# Enter order on the first date
BuyDate <- FirstDate
equity = getEndEq("buyHold", FirstDate)
FirstPrice <- as.numeric(Cl(SPY[BuyDate,]))
UnitSize = as.numeric(trunc(equity/FirstPrice))
addTxn("buyHold", Symbol = "SPY",
TxnDate = BuyDate, TxnPrice = FirstPrice,
TxnQty = UnitSize, TxnFees = 0)
LastDate <- last(time(SPY))
# Exit order on the Last Date
LastPrice <- as.numeric(Cl(SPY[LastDate,]))
addTxn("buyHold", Symbol = "SPY",
TxnDate = LastDate, TxnPrice = LastPrice,
TxnQty = -UnitSize , TxnFees = 0)
updatePortf(Portfolio = "buyHold")
updateAcct(name = "buyHold")
updateEndEq(Account = "buyHold")
updateEndEq(Account = "buyHold")
getSymbols("SPY", from=from, to=to, adjust=TRUE)
getSymbols('SPY', from=from, to=to, adjust=TRUE)
getSymbols(SPY, from=from, to=to, adjust=TRUE)
from <- as.Date("2020-01-03")
getSymbols("SPY", from=from, to=to, adjust=TRUE)
from <- as.Date("2020-01-03")
dataEnv<-new.env()
getSymbols("SPY", from=from, to=to, adjust=TRUE)
from <- as.Date("2020-01-03")
dataEnv<-new.env()
getSymbols(SPY, from=from, to=to, adjust=TRUE)
from <- as.Date("2020-01-03")
dataEnv<-new.env()
getSymbols("XRX", from=from, to=to, adjust=TRUE)
start_date <- as.Date("2020-01-03")
dataEnv<-new.env()
STOCK <- `XRX`
getSymbols(SYMBOL, from = start_date)
start_date <- as.Date("2020-01-03")
dataEnv<-new.env()
STOCK <- `SPY`
getSymbols(SYMBOL, from = start_date)
start_date <- as.Date("2020-01-03")
dataEnv<-new.env()
STOCK <- `SPY`
getSymbols(SYMBOL, from = start_date, adjust=TRUE)
library(quantmod)
library(ggplot2)
library(magrittr)
start_date <- as.Date("2020-01-03")
dataEnv<-new.env()
STOCK <- `SPY`
getSymbols(SYMBOL, from = start_date, adjust=TRUE)
rm.strat("buyHold")
#Initial Setup
initPortf("buyHold", "SPY", initDate = initDate)
initAcct("buyHold", portfolios = "buyHold",
initDate = initDate, initEq = initEq)
FirstDate <- first(time(SPY))
# Enter order on the first date
BuyDate <- FirstDate
equity = getEndEq("buyHold", FirstDate)
FirstPrice <- as.numeric(Cl(SPY[BuyDate,]))
UnitSize = as.numeric(trunc(equity/FirstPrice))
addTxn("buyHold", Symbol = "SPY",
TxnDate = BuyDate, TxnPrice = FirstPrice,
TxnQty = UnitSize, TxnFees = 0)
LastDate <- last(time(SPY))
# Exit order on the Last Date
LastPrice <- as.numeric(Cl(SPY[LastDate,]))
addTxn("buyHold", Symbol = "SPY",
TxnDate = LastDate, TxnPrice = LastPrice,
TxnQty = -UnitSize , TxnFees = 0)
updatePortf(Portfolio = "buyHold")
updateAcct(name = "buyHold")
updateEndEq(Account = "buyHold")
updateEndEq(Account = "buyHold")
rets <- PortfReturns(Account = account.st)
rets.bh <- PortfReturns(Account = "buyHold")
returns <- cbind(rets, rets.bh)
charts.PerformanceSummary(
returns, geometric = FALSE,
wealth.index = TRUE,
main = "Strategy vs. Market")
library(quantmod)
library(ggplot2)
library(magrittr)
start_date <- as.Date("2020-01-03")
dataEnv<-new.env()
STOCK <- `SPY`
getSymbols(SYMBOL, from = start_date, adjust=TRUE)
rm.strat("buyHold")
library(quantmod)
library(quantstrat)
library(ggplot2)
library(magrittr)
start_date <- as.Date("2020-01-03")
dataEnv<-new.env()
STOCK <- `SPY`
getSymbols(SYMBOL, from = start_date, adjust=TRUE)
rm.strat("buyHold")
#Initial Setup
initPortf("buyHold", "SPY", initDate = initDate)
initAcct("buyHold", portfolios = "buyHold",
initDate = initDate, initEq = initEq)
#Initial Setup
initPortf("buyHold", "SPY", initDate = start_date)
initAcct("buyHold", portfolios = "buyHold",
initDate = initDate, initEq = initEq)
library(quantmod)
library(quantstrat)
library(ggplot2)
library(magrittr)
start_date <- as.Date("2020-01-03")
dataEnv<-new.env()
STOCK <- `SPY`
getSymbols(SYMBOL, from = start_date, adjust=TRUE)
rm.strat("buyHold")
#Initial Setup
initPortf("buyHold", "SPY", initDate = start_date)
initAcct("buyHold", portfolios = "buyHold",
initDate = initDate, initEq = initEq)
FirstDate <- first(time(SPY))
# Enter order on the first date
BuyDate <- FirstDate
equity = getEndEq("buyHold", FirstDate)
FirstPrice <- as.numeric(Cl(SPY[BuyDate,]))
UnitSize = as.numeric(trunc(equity/FirstPrice))
addTxn("buyHold", Symbol = "SPY",
TxnDate = BuyDate, TxnPrice = FirstPrice,
TxnQty = UnitSize, TxnFees = 0)
LastDate <- last(time(SPY))
# Exit order on the Last Date
LastPrice <- as.numeric(Cl(SPY[LastDate,]))
addTxn("buyHold", Symbol = "SPY",
TxnDate = LastDate, TxnPrice = LastPrice,
TxnQty = -UnitSize , TxnFees = 0)
updatePortf(Portfolio = "buyHold")
updateAcct(name = "buyHold")
updateEndEq(Account = "buyHold")
updateEndEq(Account = "buyHold")
rets <- PortfReturns(Account = account.st)
rets.bh <- PortfReturns(Account = "buyHold")
returns <- cbind(rets, rets.bh)
charts.PerformanceSummary(
returns, geometric = FALSE,
wealth.index = TRUE,
main = "Strategy vs. Market")
#Initial Setup
initPortf("buyHold", "SPY", initDate = start_date)
initAcct("buyHold", portfolios = "buyHold",
initDate = initDate, initEq = initEq)
library(quantmod)
library(PerformanceAnalytics)
getSymbols('^NSEI')
chartSeries(NSEI, TA=NULL)
data=NSEI[,4]
macd = MACD(data, nFast=12, nSlow=26,nSig=9,maType=SMA,percent = FALSE)
chartSeries(data, TA='addMACD()')
signal = Lag(ifelse(macd$macd < macd$signal, -1, 1))
returns = ROC(data)*signal
returns = returns['2008-06-02/2015-09-22']
portfolio = exp(cumsum(returns))
plot(portfolio)
table.Drawdowns(returns, top=10)
table.DownsideRisk(returns)
charts.PerformanceSummary(returns)
library(quantmod)
library(PerformanceAnalytics)
getSymbols('^NSEI')
library(quantmod)
library(PerformanceAnalytics)
getSymbols('SPY')
library(quantmod)
library(PerformanceAnalytics)
getSymbols('SPY')
chartSeries(SPY, TA=NULL)
data=SPY[,4]
macd = MACD(data, nFast=12, nSlow=26,nSig=9,maType=SMA,percent = FALSE)
chartSeries(data, TA='addMACD()')
signal = Lag(ifelse(macd$macd < macd$signal, -1, 1))
returns = ROC(data)*signal
returns = returns['2008-06-02/2015-09-22']
portfolio = exp(cumsum(returns))
plot(portfolio)
table.Drawdowns(returns, top=10)
table.DownsideRisk(returns)
charts.PerformanceSummary(returns)
library(quantmod)
library(PerformanceAnalytics)
getSymbols('SPY')
chartSeries(SPY, TA=NULL)
data=SPY[,4]
returns = ROC(data)*signal
returns = returns['2008-06-02/2015-09-22']
portfolio = exp(cumsum(returns))
plot(portfolio)
table.Drawdowns(returns, top=10)
table.DownsideRisk(returns)
charts.PerformanceSummary(returns)
getSymbols('GBPUSD-X')
getSymbols('GBPUSD')
getSymbols('GBP/USD')
getSymbols('GBP/USD', src="oanda")
library(quantmod)
library(PerformanceAnalytics)
getSymbols('GBP/USD', src="oanda")
chartSeries('GBP/USD', TA=NULL)
data=SPY[,4]
returns = ROC(data)*signal
returns = returns['2008-06-02/2015-09-22']
portfolio = exp(cumsum(returns))
plot(portfolio)
table.Drawdowns(returns, top=10)
table.DownsideRisk(returns)
charts.PerformanceSummary(returns)
library(quantmod)
library(PerformanceAnalytics)
STOCK <- `GBP/USD`
getSymbols(STOCK, src="oanda")
chartSeries(STOCK, TA=NULL)
data=STOCK[,4]
returns = ROC(data)*signal
returns = returns['2008-06-02/2015-09-22']
portfolio = exp(cumsum(returns))
plot(portfolio)
table.Drawdowns(returns, top=10)
table.DownsideRisk(returns)
charts.PerformanceSummary(returns)
library(quantmod)
library(PerformanceAnalytics)
STOCK <- `GBP/USD`
getSymbols(STOCK, src="oanda")
chartSeries(STOCK, TA=NULL)
getSymbols(STOCK, src="oanda")
getSymbols(`GBP/USD`, src="oanda")
library(quantmod)
library(PerformanceAnalytics)
STOCK <- 'GBP/USD'
getSymbols(STOCK, src="oanda")
chartSeries(STOCK, TA=NULL)
data=STOCK[,4]
chartChart(STOCK, TA=NULL)
getSymbols(STOCK, src="oanda")
candleChart(STOCK, TA=NULL)
candleChart(STOCK, up.col = "green", dn.col = "red", theme = "black")
library(quantmod)
library(PerformanceAnalytics)
STOCK <- 'GBP=X'
getSymbols(STOCK)
chartSeries(STOCK, TA=NULL)
library(quantmod)
library(PerformanceAnalytics)
start_date <- as.Date("2020-01-03")
dataEnv<-new.env()
STOCK <- 'GBP=X'
getSymbols(STOCK, from = start_date)
chartSeries(STOCK, TA=NULL)
data=STOCK[,4]
data=STOCK[,5]
data=STOCK[,6]
data=STOCK[,7]
STOCK
data
library(quantmod)
library(ggplot2)
library(magrittr)
start_date <- as.Date("2008-01-03")
dataEnv<-new.env()
STOCK <- `XRX`
SYMBOL <- c("XRX")
length(SYMBOL)
#getSymbols(SYMBOL, from = start_date)
getSymbols(SYMBOL, src = "yahoo", from = start_date)
getSymbols("SPY", from = start_date)
na.omit(SYMBOL)
na.omit(STOCK)
CPR <- STOCK/SPY
candleChart(STOCK, up.col = "green", dn.col = "red", theme = "black")
candleChart(CPR, up.col = "green", dn.col = "red", theme = "black")
library(quantmod)
library(ggplot2)
library(magrittr)
start_date <- as.Date("2008-01-03")
dataEnv<-new.env()
STOCK <- `XRX`
SYMBOL <- c("XRX")
length(SYMBOL)
getSymbols(SYMBOL, src = "yahoo", from = start_date)
library(quantmod)
library(ggplot2)
library(magrittr)
start_date <- as.Date("2008-01-03")
dataEnv<-new.env()
STOCK <- `XRX`
SYMBOL <- c("XRX")
length(SYMBOL)
#getSymbols(SYMBOL, from = start_date)
getSymbols(SYMBOL, src = "yahoo", from = start_date)
getSymbols("SPY", from = start_date)
na.omit(SYMBOL)
na.omit(STOCK)
CPR <- STOCK/SPY
candleChart(STOCK, up.col = "green", dn.col = "red", theme = "black")
candleChart(CPR, up.col = "green", dn.col = "red", theme = "black")
library(quantmod)
library(ggplot2)
library(magrittr)
start_date <- as.Date("2008-01-03")
dataEnv<-new.env()
STOCK <- `CAJ`
SYMBOL <- c("CAJ")
length(SYMBOL)
#getSymbols(SYMBOL, from = start_date)
getSymbols(SYMBOL, src = "yahoo", from = start_date)
getSymbols("SPY", from = start_date)
na.omit(SYMBOL)
na.omit(STOCK)
CPR <- STOCK/SPY
candleChart(STOCK, up.col = "green", dn.col = "red", theme = "black")
candleChart(CPR, up.col = "green", dn.col = "red", theme = "black")
suppressPackageStartupMessages(library(knitr))
suppressPackageStartupMessages(library(lubridate))
suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(quantstrat))
suppressPackageStartupMessages(library(highcharter))
suppressPackageStartupMessages(library(IKTrading))
suppressPackageStartupMessages(library(doParallel))
suppressPackageStartupMessages(library(dplyr))
t1 <- Sys.time()
registerDoParallel(detectCores())
# ---------------------------------------------------- #
t1 <- Sys.time()
init_date <- "2004-10-25 01:00:00"
init_equity <- 200
start_date <- "2018-01::"
stoploss <- 0.24
profitLong <- 1.8
profitSell <- 7.4
emaF <- 8  #S->8   || B->3
emaM <- 28  #S->28  || B->4
emaS <- 195 #S->195 || B-> 22
wdayBuy <- c(1,2) #c(2,4,5,7)
wdaySell <- c(6,7)    #c(1,6)
# ---------------------------------------------------- #
setwd("/home/sorath/Projectos/simstrat")
Sys.setenv(TZ = "UTC")
currency("EUR")
portfolio.st <- "Port.Luxor"
account.st <- "Acct.Luxor"
strategy.st <- "Strat.Luxor"
rm.strat(portfolio.st)
rm.strat(account.st)
source("heikin.R")
as.data.frame(read.zoo("EURUSD.csv", header = TRUE, stringsAsFactors = FALSE, sep = ",", index = 1:2,
#tz = "UTC", format = "%d.%m.%Y %H:%M"))
EURUSD <- getSymbols("EURUSD=X", src = "yahoo")
read.zoo(EURUSD)
EURUSD
getSymbols("EURUSD=X", src = "yahoo")
EURUSD=X
EURUSD <- getSymbols("AAPL", src = "yahoo")
EURUSD
read.zoo(EURUSD)
EURUSD <- EURUSD[start_date]
EURUSD
symbols <- c("EURUSD")
symbols
AAPL
EURUSD <- getSymbols("GBPUSD=X", src = "yahoo")
EURUSD <- getSymbols("GBPUSD=X", src = "oanda")
getSymbols("GBPUSD", src = "oanda")
read.zoo(EURUSD)
getSymbols("GBP/USD", src = "oanda")
GBP/USD
EURUSD <- getSymbols("GBP/USD", src = "oanda")
EURUSD
head(EURUSD)
head("GBP/USD")
read.zoo(EURUSD)
getSymbols("GBP", src = "oanda")
getSymbols("GBP", src = "yahoo")
GBP
suppressPackageStartupMessages(library(knitr))
suppressPackageStartupMessages(library(lubridate))
suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(quantstrat))
suppressPackageStartupMessages(library(highcharter))
suppressPackageStartupMessages(library(IKTrading))
suppressPackageStartupMessages(library(doParallel))
suppressPackageStartupMessages(library(dplyr))
t1 <- Sys.time()
registerDoParallel(detectCores())
# ---------------------------------------------------- #
t1 <- Sys.time()
init_date <- "2004-10-25 01:00:00"
init_equity <- 200
start_date <- "2018-01::"
stoploss <- 0.24
profitLong <- 1.8
profitSell <- 7.4
emaF <- 8  #S->8   || B->3
emaM <- 28  #S->28  || B->4
emaS <- 195 #S->195 || B-> 22
wdayBuy <- c(1,2) #c(2,4,5,7)
wdaySell <- c(6,7)    #c(1,6)
# ---------------------------------------------------- #
setwd("/home/sorath/Projectos/simstrat")
Sys.setenv(TZ = "UTC")
currency("EUR")
portfolio.st <- "Port.Luxor"
account.st <- "Acct.Luxor"
strategy.st <- "Strat.Luxor"
rm.strat(portfolio.st)
rm.strat(account.st)
source("heikin.R")
source("myblotter.R")
source("strat.R")
source("rules.R")
EURUSD
GBP
EURUSD <- getSymbols("GBP", src = "yahoo")
EURUSD
EURUSD <- getSymbols("GBP", src = "yahoo")
head("EURUSD")
getSymbols("GBP", src = "yahoo")
EURUSD <- GBP
EURUSD
suppressPackageStartupMessages(library(knitr))
suppressPackageStartupMessages(library(lubridate))
suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(quantstrat))
suppressPackageStartupMessages(library(highcharter))
suppressPackageStartupMessages(library(IKTrading))
suppressPackageStartupMessages(library(doParallel))
suppressPackageStartupMessages(library(dplyr))
t1 <- Sys.time()
registerDoParallel(detectCores())
# ---------------------------------------------------- #
t1 <- Sys.time()
init_date <- "2004-10-25 01:00:00"
init_equity <- 200
start_date <- "2018-01::"
stoploss <- 0.24
profitLong <- 1.8
profitSell <- 7.4
emaF <- 8  #S->8   || B->3
emaM <- 28  #S->28  || B->4
emaS <- 195 #S->195 || B-> 22
wdayBuy <- c(1,2) #c(2,4,5,7)
wdaySell <- c(6,7)    #c(1,6)
# ---------------------------------------------------- #
setwd("/home/sorath/Projectos/simstrat")
Sys.setenv(TZ = "UTC")
currency("EUR")
portfolio.st <- "Port.Luxor"
account.st <- "Acct.Luxor"
strategy.st <- "Strat.Luxor"
rm.strat(portfolio.st)
rm.strat(account.st)
source("heikin.R")
source("myblotter.R")
source("strat.R")
source("rules.R")
